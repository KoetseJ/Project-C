<!-- Dependencies needed for PagedList-->
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<webtest.Models.Book>
@{
    ViewBag.Title = "Results";
    Layout = "~/Views/Shared/_customLayout.cshtml";
}

<head>
    <link href="~/Content/SearchResults.css" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" />
</head>
<!-- COPY THIS -->
<div id="container">
    <!-- Top Categories: links van het scherm verdwijnt bij 1290px -->
    <div id="topCategories">
        <a id="txtSearchTitle">TOP CATEGORIES</a>
        <a id="txtTC">Horror</a><a id="txtTC">Drama</a><a id="txtTC">Romance</a><a id="txtTC">Fantasy</a>
    </div>
    <!-- Results: hier worden alle resultaten geladen -->
    <div id="results">
        <div>
            <a id="txtResultsTitle">RESULTS</a>
            <button id="btnOrderBy">Order By</button>
        </div>

        <!-- Filters: Boven de results komt tevoorschijn kleiner dan 1290px -->
        <!-- PrijsFilter top -->
        <div id="filtersTop">
            <label id="filterTopTitle">Price</label>
            <label id="filterTopTitle">Rating</label> <br />
            @using (Html.BeginForm("Results", "Product", FormMethod.Get))
            {
                @Html.Hidden("search", Request.QueryString["search"])
                <div id="priceFilterTop">
                    <input id="priceTop" type="text" name="MinPrice" placeholder="Min Price" , value="@Request.QueryString["MinPrice"]">
                    <input id="priceTop" type="text" name="MaxPrice" placeholder="Max Price" , value="@Request.QueryString["MaxPrice"]">
                </div>
                <!-- Select rating top -->
                <select id="filterTopSelect">
                    <option>Select Rating</option>
                    <option value="1" @if (@Request.QueryString["Rating"] == "1") { <text> selected="selected" </text> }> 1</option>
                    <option value="2" @if (@Request.QueryString["Rating"] == "2") { <text> selected="selected" </text> }>2</option>
                    <option value="3" @if (@Request.QueryString["Rating"] == "3") { <text> selected="selected" </text> }> 3</option>
                    <option value="4" @if (@Request.QueryString["Rating"] == "4") { <text> selected="selected" </text> }>4</option>
                    <option value="5" @if (@Request.QueryString["Rating"] == "5") { <text> selected="selected" </text> }>5</option>
                </select>
                <!-- save button Top -->
                <input id="ratingInputTop" type="text" name="Rating" , style="display:none">
                <button id="btnSaveFiltersTop" , onclick="setRatingTop()"><i class="fa fa-check"></i></button>
            }
        </div>
        <img id="stripe" src="~/Content/Images/stripe.png" />

        <!-- SHOW PRODUCTS-->
        <!-- Check of er producten zijn gevonden-->
        @if (Model.Count == 0)
        {
            <text> No products found</text>
        }
        <!-- ForEachLoop door alle producten die zijn opgehaald uit de database.-->
        <!-- Elke product krijgt dezelfde opmaak in <div id="procuct"> ..... </div> -->
        <!-- Alle waardes worden opgehaald uit de database en ingevuld op de juiste plekken -->
        @foreach (var m in Model)
        {
            <!-- De ForEachLoop zorgt ervoor dat alle producten met verschillende waardes en dezelfde opmaak onder elkaar worden geplaatst.-->
            <div id="product">
                <img id="productImg" src="@m.Image_src" />
                <label id="title">@m.Name</label>
                <label id="price">$@m.Price</label>
                <label id="author">@m.Author</label>
                @switch (m.Rating)
                {
                    case 1:
                        <img id="rating" src="~/Content/Images/Rating1Star.png" />
                        break;
                    case 2:
                        <img id="rating" src="~/Content/Images/Rating2Star.png" />
                        break;
                    case 3:
                        <img id="rating" src="~/Content/Images/Rating3Star.png" />
                        break;
                    case 4:
                        <img id="rating" src="~/Content/Images/Rating4Star.png" />
                        break;
                    case 5:
                        <img id="rating" src="~/Content/Images/Rating5Star.png" />
                        break;
                }

                <label id="summary">
                    @{string mktText = m.Summary;
                        if (mktText.Length > 250)
                        {
                            int pos = mktText.LastIndexOf(" ", 250);

                            mktText = mktText.Substring(0, pos) + "...";
                        }}
                    @mktText;
                </label>
                <label id="priceSmall">$@m.Price</label>
                <a id="moreInfo">More Info</a>
                <button id="btnWishList"><i class="fa fa-heart"></i></button>
                <button id="btnCart">ADD TO CART</button>
                <a id="moreInfoSmall">More Info</a>
                <img id="stripe" src="~/Content/Images/stripe.png" />

            </div>
        }
        <!-- Dit is de PagedListPager die  ervoor zorgt dat er maar 3 items per pagina worden laten zien.-->
        <!-- De PagedListPager past zich automatisch aan en zal de pagina's zelf weergeven.-->
        <!-- De CSS kan gevonden worden in ~Content\PagedList-->
        @Html.PagedListPager(Model, page => Url.Action("Results", new { page, search = Request.QueryString["search"], MinPrice = Request.QueryString["MinPrice"],
       MaxPrice = Request.QueryString["MaxPrice"], Rating = Request.QueryString["Rating"]}), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })

    </div>
    <!-- filters: links van het scherm onder top categories verdwijnt bij 1290px -->
    <div id="filters">
        <a id="txtSearchTitle">FILTERS</a>
        <label>Price</label><br />
        @using (Html.BeginForm("Results", "Product", FormMethod.Get))
        {
            @Html.Hidden("search", Request.QueryString["search"])
            <div id="priceFilter">

                <input id="minPrice" type="text" name="MinPrice" placeholder="Min Price" , value="@Request.QueryString["MinPrice"]">
                <input id="maxPrice" type="text" name="MaxPrice" placeholder="Max Price" , value="@Request.QueryString["MaxPrice"]">
            </div><br />

            <label>Rating</label>
            <select id="ratingFilter" ,>
                <option>Select Rating</option>
                <option value="1" @if (@Request.QueryString["Rating"] == "1") { <text> selected="selected" </text> }> 1</option>
                <option value="2" @if (@Request.QueryString["Rating"] == "2") { <text> selected="selected" </text> }>2</option>
                <option value="3" @if (@Request.QueryString["Rating"] == "3") { <text> selected="selected" </text> }> 3</option>
                <option value="4" @if (@Request.QueryString["Rating"] == "4") { <text> selected="selected" </text> }>4</option>
                <option value="5" @if (@Request.QueryString["Rating"] == "5") { <text> selected="selected" </text> }>5</option>
            </select>
            <input id="ratingInput" type="text" name="Rating" , style="display:none">
            <button id="btnSaveFilters" , onclick="setRating()">Apply Filters</button>
        }
        <script>
            function setRating() {
                // GEEF RATING WAARDE MEE AAN URL
                var rating = document.getElementById("ratingFilter");
                document.getElementById("ratingInput").value = rating.options[rating.selectedIndex].value;

            }
            function setRatingTop() {
                var rating = document.getElementById("filterTopSelect");
                document.getElementById("ratingInputTop").value = rating.options[rating.selectedIndex].value;
            }

        </script>

    </div>
</div>